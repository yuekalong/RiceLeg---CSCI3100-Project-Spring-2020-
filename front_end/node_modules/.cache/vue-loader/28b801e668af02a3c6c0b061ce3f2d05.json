{"remainingRequest":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/Profile.vue","mtime":1589641518000},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/babel-loader/lib/index.js","mtime":1573785088708},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js","mtime":1584457032094},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js","mtime":1573785100670}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { service } from \"@/plugins/request_service\";\nexport default {\n  name: \"Profile\",\n  data: () => ({\n    user: {\n      username: \"\",\n      password: \"\",\n      displayName: \"\",\n      email: \"\",\n      year: \"\",\n      major: \"\",\n      college: \"\",\n      selfIntro: \"\"\n    },\n    loaded: false,\n    changedn: false,\n    changesi: false,\n    changepw: false,\n    snackbar: false,\n    reminder: false,\n    passwordFieldType: \"password\",\n    passwordRules: [\n      // password requirements\n      v =>\n        (v || \"\").match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n        \"Password must contain an upper case letter, a numeric character, and a special character\",\n      v => (v && v.length > 6) || \"Password must be More than 6 characters\",\n      v => !!v || \"Password is required\"\n    ],\n    selfIntroRules: [v => (v && v.length <= 70) || \"Maximimum 70 characters\"], // self introduction requirement\n    success: false,\n    multiLine: true,\n    newpw: null,\n    newdn: null,\n    newsi: null,\n    repw: null,\n    oldpw: null\n  }),\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      service\n        .get(`/auth/queryAccountInform/${this.$store.state.user[\"username\"]}`)\n        .then(res => {\n          if (res.data.success) {\n            this.user = res.data.data[0];\n            this.loaded = true;\n          }\n        });\n    },\n    switchVisibility() {\n      // allow passwords to be seen or censored\n      this.passwordFieldType =\n        this.passwordFieldType === \"password\" ? \"text\" : \"password\";\n    },\n    updateProfile() {\n      console.log(this.newdn);\n      if (this.newpw !== this.repw) {\n        // new password not the same as reentered new password\n        this.snackbar = true;\n        return;\n      }\n      if (this.changedn === true) {\n        // change display name\n        if (this.newdn === null) {\n          // empty field in change display name\n          this.reminder = true;\n          return;\n        } else {\n          this.changedn = false;\n          this.user.displayName = this.newdn;\n        }\n      }\n      if (this.changepw === true) {\n        // change password\n        if (this.newpw === null || this.repw === null || this.oldpw === null) {\n          // empty field in change password\n          this.reminder = true;\n          return;\n        } else {\n          var reg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/;\n          if (this.user.password.match(reg) == null) {\n            // make sure entered passwords fullfill password requirements\n            this.newpw = null;\n            this.newdn = null;\n            this.newsi = null;\n            this.repw = null;\n            this.oldpw = null;\n            this.snackbar = true;\n            return;\n          }\n          this.changepw = false;\n          this.user.password = this.newpw;\n        }\n      }\n      if (this.changesi === true) {\n        // change self intro\n        if (this.newsi === null) {\n          // empty field in change self intro\n          this.reminder = true;\n          return;\n        } else {\n          var regsi = /^.{1,70}$/;\n          if (this.newsi.match(regsi) == null) {\n            // make sure entered self introduction is under 70 characters\n            this.newsi = null;\n            this.snackbar_si = true;\n            return;\n          }\n          this.changesi = false;\n          this.user.selfIntro = this.newsi;\n        }\n        this.newpw = undefined;\n        this.newdn = undefined;\n        this.newsi = undefined;\n        this.repw = undefined;\n        service\n          .put(\"/auth/updateProfile\", {\n            username: this.user.username,\n            password: this.user.password,\n            displayName: this.user.displayName,\n            year: this.user.year,\n            major: this.user.major,\n            email: this.user.email,\n            college: this.user.college,\n            selfIntro: this.user.selfIntro\n          })\n          .then(res => {\n            if (res.data.success) {\n              console.log(\"success!\");\n            }\n          });\n        this.success = true;\n      }\n      service\n        .put(\"/auth/updateProfile\", {\n          // fetch current user information\n          username: this.user.username,\n          password: this.user.password,\n          displayName: this.user.displayName,\n          year: this.user.year,\n          major: this.user.major,\n          email: this.user.email,\n          college: this.user.college,\n          selfIntro: this.user.selfIntro,\n          oldpw: this.oldpw\n        })\n        .then(res => {\n          if (res.data.success) {\n            console.log(\"success!\");\n            this.success = true;\n          }\n        })\n        .catch(err => {\n          // catch error from changing password due to not matching old password\n          this.newpw = null;\n          this.newdn = null;\n          this.newsi = null;\n          this.repw = null;\n          this.oldpw = null;\n          this.snackbar = true;\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Profile.vue","sourceRoot":"src/views","sourcesContent":["/* * MODULE NAME: PROFILE * PROGRAMMER: LAM HIU LUI * VERSION: 1.0 (16 MAY 2020)\n* * PURPOSE: PROFILE PAGE STRUCTURE OF RICELEG * PROVIDE FUNCTIONALITIES OF\nPROFILE MANAGEMENT (CHANGE PASSWORD, CHANGE DISPLAY NAME, CHANGE SELF\nINTRODUCTION) */\n<template>\n  <div id=\"chatroom\">\n    <v-container grid-list-xl>\n      <v-card color=\"secondary\">\n        <v-card-title class=\"white--text\">\n          <h1 class=\"font-weight-light\">Profile</h1>\n        </v-card-title>\n        <div></div>\n        <v-progress-circular\n          class=\"justify-center\"\n          :size=\"50\"\n          v-if=\"!loaded\"\n          indeterminate\n          color=\"teritary\"\n          style=\"text-align:center;\"\n        ></v-progress-circular>\n        <v-card-text class=\"white\">\n          <!-- Below will display current user profile details -->\n          <v-container>\n            <v-card-text class=\"title pb-0\"\n              >Username: {{ user.username }}</v-card-text\n            >\n            <v-row no-gutters>\n              <v-col class=\"col-8\">\n                <v-card-text class=\"title pb-0\"\n                  >Display name: {{ user.displayName }}</v-card-text\n                >\n              </v-col>\n              <v-col>\n                <!-- User can change display name -->\n                <v-btn class=\"pb-0\" @click=\"changedn = true\"\n                  >Change display name</v-btn\n                >\n                <v-dialog v-model=\"changedn\" persistent max-width=\"500\">\n                  <v-card width=\"100%\">\n                    <v-card-title class=\"headline\"\n                      >Change display name</v-card-title\n                    >\n                    <v-row>\n                      <v-col class=\"col-1\"></v-col>\n                      <v-col sm=\"6\">\n                        <v-text-field\n                          label=\"New display name\"\n                          required\n                          v-model=\"newdn\"\n                          clearable\n                          :rules=\"nameRules\"\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                    <v-card-actions>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\"> </v-col>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                        color=\"secondary\"\n                        text\n                        @click=\"\n                          changedn = false;\n                          newdn = null;\n                        \"\n                        >Go back</v-btn\n                      >\n                      <v-btn color=\"primary\" text @click=\"updateProfile()\"\n                        >Yes</v-btn\n                      >\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n              </v-col>\n            </v-row>\n            <v-row no-gutters>\n              <v-col class=\"col-8\">\n                <v-card-text class=\"title pb-0\"\n                  >Password: ●●●●●●●●●●</v-card-text\n                >\n              </v-col>\n              <v-col>\n                <!-- User can change password by entering old password and new password twice -->\n                <v-btn class=\"pb-0\" @click=\"changepw = true\"\n                  >Change password</v-btn\n                >\n                <v-dialog v-model=\"changepw\" persistent max-width=\"500\">\n                  <v-card width=\"100%\">\n                    <v-card-title class=\"headline\"\n                      >Change password</v-card-title\n                    >\n                    <v-row>\n                      <v-col class=\"col-1\"></v-col>\n                      <v-col sm=\"8\">\n                        <v-text-field\n                          label=\"Old password\"\n                          required\n                          v-model=\"oldpw\"\n                          :rules=\"passwordRules\"\n                          :type=\"passwordFieldType\"\n                          clearable\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                    <v-row>\n                      <v-col class=\"col-1\"></v-col>\n                      <v-col sm=\"8\">\n                        <v-text-field\n                          label=\"New password\"\n                          required\n                          v-model=\"newpw\"\n                          :rules=\"passwordRules\"\n                          :type=\"passwordFieldType\"\n                          clearable\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                    <v-row>\n                      <v-col class=\"col-1\"></v-col>\n                      <v-col sm=\"8\">\n                        <v-text-field\n                          label=\"Re-enter password\"\n                          required\n                          v-model=\"repw\"\n                          :rules=\"passwordRules\"\n                          :type=\"passwordFieldType\"\n                          clearable\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <!-- User can click on the eye icon to make password visible -->\n                      <v-btn\n                        type=\"password\"\n                        @click=\"switchVisibility\"\n                        text\n                        small\n                      >\n                        <v-icon>fas fa-eye</v-icon>\n                      </v-btn>\n                      <v-btn\n                        color=\"secondary\"\n                        text\n                        @click=\"\n                          changepw = false;\n                          oldpw = null;\n                          newpw = null;\n                          repw = null;\n                        \"\n                        >Go back</v-btn\n                      >\n                      <v-btn color=\"primary\" text @click=\"updateProfile()\"\n                        >Yes</v-btn\n                      >\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n              </v-col>\n            </v-row>\n            <v-card-text class=\"title pb-0\"\n              >Email: {{ user.email }}</v-card-text\n            >\n            <v-card-text class=\"title pb-0\">Year: {{ user.year }}</v-card-text>\n            <v-card-text class=\"title pb-0\"\n              >Major: {{ user.major }}</v-card-text\n            >\n            <v-card-text class=\"title pb-0\"\n              >College: {{ user.college }}</v-card-text\n            >\n            <v-row no-gutters>\n              <v-col class=\"col-8\">\n                <v-card-text class=\"title pb-0\"\n                  >Self Introduction: {{ user.selfIntro }}</v-card-text\n                >\n              </v-col>\n              <v-col>\n                <!-- User can change self introduction -->\n                <v-btn class=\"pb-0\" @click=\"changesi = true\"\n                  >Change self introduction</v-btn\n                >\n                <v-dialog v-model=\"changesi\" persistent max-width=\"500\">\n                  <v-card>\n                    <v-card-title class=\"headline\"\n                      >Change self introduction</v-card-title\n                    >\n                    <v-row>\n                      <v-col class=\"col-1\"></v-col>\n                      <v-col sm=\"10\">\n                        <v-text-field\n                          label=\"New self introduction\"\n                          required\n                          v-model=\"newsi\"\n                          :rules=\"selfIntroRules\"\n                          counter=\"70\"\n                          clearable\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                    <v-card-actions>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\"> </v-col>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                        color=\"secondary\"\n                        text\n                        @click=\"\n                          changesi = false;\n                          newsi = null;\n                        \"\n                        >Go back</v-btn\n                      >\n                      <v-btn color=\"primary\" text @click=\"updateProfile()\"\n                        >Yes</v-btn\n                      >\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n              </v-col>\n            </v-row>\n            <!-- Warning notification for invalid password changing request -->\n            <v-snackbar\n              v-model=\"snackbar\"\n              :multi-line=\"multiLine\"\n              :timeout=\"5000\"\n              top\n              color=\"secondary\"\n            >\n              Invalid password changing request!<br />\n              (Wrong old password/ non-matching new passwords)\n              <v-btn text color=\"blue lighten-2\" @click=\"snackbar = false\">\n                Close\n              </v-btn>\n            </v-snackbar>\n            <!-- Warning notification for invalid self introduction -->\n            <v-snackbar\n              v-model=\"snackbar_si\"\n              :multi-line=\"multiLine\"\n              :timeout=\"5000\"\n              top\n              color=\"secondary\"\n            >\n              Invalid self introduction!\n              <v-btn text color=\"white\" @click=\"snackbar = false\">Close</v-btn>\n            </v-snackbar>\n            <!-- Reminder notification for user to complete the form -->\n            <v-snackbar\n              v-model=\"reminder\"\n              :multi-line=\"multiLine\"\n              :timeout=\"3000\"\n              top\n              color=\"secondary\"\n            >\n              Please complete the form!\n              <v-btn text color=\"blue lighten-2\" @click=\"success = false\">\n                Close\n              </v-btn>\n            </v-snackbar>\n            <!-- Confirmation notification for user to know their information has been saved -->\n            <v-snackbar\n              v-model=\"success\"\n              :multi-line=\"multiLine\"\n              :timeout=\"3000\"\n              top\n              color=\"secondary\"\n            >\n              Your information has been saved!\n              <v-btn text color=\"blue lighten-2\" @click=\"success = false\">\n                Close\n              </v-btn>\n            </v-snackbar>\n          </v-container>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { service } from \"@/plugins/request_service\";\nexport default {\n  name: \"Profile\",\n  data: () => ({\n    user: {\n      username: \"\",\n      password: \"\",\n      displayName: \"\",\n      email: \"\",\n      year: \"\",\n      major: \"\",\n      college: \"\",\n      selfIntro: \"\"\n    },\n    loaded: false,\n    changedn: false,\n    changesi: false,\n    changepw: false,\n    snackbar: false,\n    reminder: false,\n    passwordFieldType: \"password\",\n    passwordRules: [\n      // password requirements\n      v =>\n        (v || \"\").match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n        \"Password must contain an upper case letter, a numeric character, and a special character\",\n      v => (v && v.length > 6) || \"Password must be More than 6 characters\",\n      v => !!v || \"Password is required\"\n    ],\n    selfIntroRules: [v => (v && v.length <= 70) || \"Maximimum 70 characters\"], // self introduction requirement\n    success: false,\n    multiLine: true,\n    newpw: null,\n    newdn: null,\n    newsi: null,\n    repw: null,\n    oldpw: null\n  }),\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      service\n        .get(`/auth/queryAccountInform/${this.$store.state.user[\"username\"]}`)\n        .then(res => {\n          if (res.data.success) {\n            this.user = res.data.data[0];\n            this.loaded = true;\n          }\n        });\n    },\n    switchVisibility() {\n      // allow passwords to be seen or censored\n      this.passwordFieldType =\n        this.passwordFieldType === \"password\" ? \"text\" : \"password\";\n    },\n    updateProfile() {\n      console.log(this.newdn);\n      if (this.newpw !== this.repw) {\n        // new password not the same as reentered new password\n        this.snackbar = true;\n        return;\n      }\n      if (this.changedn === true) {\n        // change display name\n        if (this.newdn === null) {\n          // empty field in change display name\n          this.reminder = true;\n          return;\n        } else {\n          this.changedn = false;\n          this.user.displayName = this.newdn;\n        }\n      }\n      if (this.changepw === true) {\n        // change password\n        if (this.newpw === null || this.repw === null || this.oldpw === null) {\n          // empty field in change password\n          this.reminder = true;\n          return;\n        } else {\n          var reg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/;\n          if (this.user.password.match(reg) == null) {\n            // make sure entered passwords fullfill password requirements\n            this.newpw = null;\n            this.newdn = null;\n            this.newsi = null;\n            this.repw = null;\n            this.oldpw = null;\n            this.snackbar = true;\n            return;\n          }\n          this.changepw = false;\n          this.user.password = this.newpw;\n        }\n      }\n      if (this.changesi === true) {\n        // change self intro\n        if (this.newsi === null) {\n          // empty field in change self intro\n          this.reminder = true;\n          return;\n        } else {\n          var regsi = /^.{1,70}$/;\n          if (this.newsi.match(regsi) == null) {\n            // make sure entered self introduction is under 70 characters\n            this.newsi = null;\n            this.snackbar_si = true;\n            return;\n          }\n          this.changesi = false;\n          this.user.selfIntro = this.newsi;\n        }\n        this.newpw = undefined;\n        this.newdn = undefined;\n        this.newsi = undefined;\n        this.repw = undefined;\n        service\n          .put(\"/auth/updateProfile\", {\n            username: this.user.username,\n            password: this.user.password,\n            displayName: this.user.displayName,\n            year: this.user.year,\n            major: this.user.major,\n            email: this.user.email,\n            college: this.user.college,\n            selfIntro: this.user.selfIntro\n          })\n          .then(res => {\n            if (res.data.success) {\n              console.log(\"success!\");\n            }\n          });\n        this.success = true;\n      }\n      service\n        .put(\"/auth/updateProfile\", {\n          // fetch current user information\n          username: this.user.username,\n          password: this.user.password,\n          displayName: this.user.displayName,\n          year: this.user.year,\n          major: this.user.major,\n          email: this.user.email,\n          college: this.user.college,\n          selfIntro: this.user.selfIntro,\n          oldpw: this.oldpw\n        })\n        .then(res => {\n          if (res.data.success) {\n            console.log(\"success!\");\n            this.success = true;\n          }\n        })\n        .catch(err => {\n          // catch error from changing password due to not matching old password\n          this.newpw = null;\n          this.newdn = null;\n          this.newsi = null;\n          this.repw = null;\n          this.oldpw = null;\n          this.snackbar = true;\n        });\n    }\n  }\n};\n</script>\n"]}]}