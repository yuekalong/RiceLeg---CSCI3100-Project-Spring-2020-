{"remainingRequest":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/SignUp.vue?vue&type=template&id=6f83b81c&","dependencies":[{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/SignUp.vue","mtime":1585194971752},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1573785100670},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js","mtime":1584457032094},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js","mtime":1573785100670}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-container\",\n    { attrs: { fluid: \"\" } },\n    [\n      _c(\n        \"v-layout\",\n        { attrs: { \"align-center\": \"\", \"justify-center\": \"\" } },\n        [\n          _c(\n            \"v-card\",\n            [\n              _c(\n                \"v-img\",\n                {\n                  staticClass: \"white--text\",\n                  attrs: {\n                    height: \"200px\",\n                    src: require(\"@/assets/sign_up_cover_photo/sign_up_cover.jpg\")\n                  }\n                },\n                [\n                  _c(\n                    \"v-container\",\n                    { attrs: { \"fill-height\": \"\", fluid: \"\" } },\n                    [\n                      _c(\n                        \"v-layout\",\n                        { attrs: { \"fill-height\": \"\" } },\n                        [\n                          _c(\"v-flex\", {\n                            attrs: { xs12: \"\", \"align-end\": \"\", flexbox: \"\" }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-card-title\",\n                { staticClass: \"display-1 font-weight-light\" },\n                [_vm._v(\"Sign Up\")]\n              ),\n              _c(\n                \"v-card-text\",\n                [\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", md6: \"\" } },\n                    [\n                      _c(\n                        \"v-form\",\n                        {\n                          ref: \"form\",\n                          attrs: { \"lazy-validation\": \"\" },\n                          model: {\n                            value: _vm.valid,\n                            callback: function($$v) {\n                              _vm.valid = $$v\n                            },\n                            expression: \"valid\"\n                          }\n                        },\n                        [\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              counter: 10,\n                              rules: _vm.nameRules,\n                              label: \"Name\",\n                              required: \"\"\n                            },\n                            model: {\n                              value: _vm.name,\n                              callback: function($$v) {\n                                _vm.name = $$v\n                              },\n                              expression: \"name\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              rules: _vm.passwordRules,\n                              counter: 6,\n                              label: \"Password\",\n                              type: \"password\"\n                            },\n                            model: {\n                              value: _vm.password,\n                              callback: function($$v) {\n                                _vm.password = $$v\n                              },\n                              expression: \"password\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              rules: _vm.emailRules,\n                              label: \"E-mail\",\n                              required: \"\"\n                            },\n                            model: {\n                              value: _vm.email,\n                              callback: function($$v) {\n                                _vm.email = $$v\n                              },\n                              expression: \"email\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              rules: _vm.majorRules,\n                              label: \"Major\",\n                              required: \"\"\n                            },\n                            model: {\n                              value: _vm.major,\n                              callback: function($$v) {\n                                _vm.major = $$v\n                              },\n                              expression: \"major\"\n                            }\n                          }),\n                          _c(\"v-select\", {\n                            attrs: {\n                              items: _vm.college,\n                              rules: [\n                                function(v) {\n                                  return !!v || \"College is required\"\n                                }\n                              ],\n                              label: \"College\",\n                              required: \"\"\n                            },\n                            model: {\n                              value: _vm.select,\n                              callback: function($$v) {\n                                _vm.select = $$v\n                              },\n                              expression: \"select\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: { label: \"Bio\", required: \"\" },\n                            model: {\n                              value: _vm.Bio,\n                              callback: function($$v) {\n                                _vm.Bio = $$v\n                              },\n                              expression: \"Bio\"\n                            }\n                          }),\n                          _c(\"v-checkbox\", {\n                            attrs: {\n                              rules: [\n                                function(v) {\n                                  return !!v || \"You must agree to continue!\"\n                                }\n                              ],\n                              label: \"Confirm all your information is correct\",\n                              required: \"\"\n                            },\n                            model: {\n                              value: _vm.checkbox,\n                              callback: function($$v) {\n                                _vm.checkbox = $$v\n                              },\n                              expression: \"checkbox\"\n                            }\n                          }),\n                          _c(\n                            \"v-row\",\n                            [\n                              _c(\"v-spacer\"),\n                              _c(\n                                \"v-btn\",\n                                {\n                                  attrs: {\n                                    disabled: !_vm.valid,\n                                    color: \"primary\"\n                                  },\n                                  on: { click: _vm.validate }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                Validate\\n              \"\n                                  )\n                                ]\n                              ),\n                              _c(\"v-spacer\"),\n                              _c(\n                                \"v-btn\",\n                                {\n                                  attrs: { color: \"error\" },\n                                  on: { click: _vm.reset }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                Reset Form\\n              \"\n                                  )\n                                ]\n                              ),\n                              _c(\"v-spacer\"),\n                              _c(\n                                \"v-btn\",\n                                {\n                                  attrs: { color: \"warning\" },\n                                  on: { click: _vm.resetValidation }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                Reset Validation\\n              \"\n                                  )\n                                ]\n                              ),\n                              _c(\"v-spacer\")\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-card-actions\",\n                [\n                  _c(\"v-spacer\"),\n                  _c(\"v-btn\", { attrs: { flat: \"\" } }, [_vm._v(\"Cancel\")]),\n                  _c(\"v-btn\", { attrs: { flat: \"\", color: \"primary\" } }, [\n                    _vm._v(\"Submit\")\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}