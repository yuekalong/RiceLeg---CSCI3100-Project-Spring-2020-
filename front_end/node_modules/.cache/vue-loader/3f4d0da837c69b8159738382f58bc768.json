{"remainingRequest":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/components/core/Toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/components/core/Toolbar.vue","mtime":1589641334000},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/babel-loader/lib/index.js","mtime":1573785088708},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js","mtime":1584457032094},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js","mtime":1573785100670}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Utilities\nimport { mapGetters, mapMutations } from \"vuex\";\n\nexport default {\n  data: () => ({\n    links: [\n      { text: \"Restaurant\", to: \"restaurant\" }, // set Restaurant route\n      { text: \"Matching\", to: \"matching\" }, // set Matching route\n      { text: \"Chatroom\", to: \"chatroom\" } // set Chatroom route\n    ],\n    login: { text: \"Login\", to: \"login\" }, // set Login route\n    sign_up: { text: \"Sign Up\", to: \"sign_up\" }, // set Sign Up route\n    drawer: false,\n    windowHeight: 375\n  }),\n  mounted() {\n    this.fetchWindowSize();\n  },\n  methods: {\n    fetchWindowSize() {\n      this.windowHeight = window.innerHeight;\n    },\n    backHome() {\n      this.$router.push(\"/\");\n    },\n    // handle logout request\n    async logout() {\n      // if in chatroom page and socket still connected\n      if (this.$socket != null) {\n        // emit to back-end to disconnect socket\n        await this.$socket.emit(\"leavePage\", this.$store.state.user);\n      }\n      // use the logout function in mutation to remove all the state\n      await this.$store.dispatch(\"logout\").then(res => {\n        this.$router.push(\"/\");\n      });\n    }\n  }\n};\n",{"version":3,"sources":["Toolbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Toolbar.vue","sourceRoot":"src/components/core","sourcesContent":["/*\n * MODULE NAME: TOOLBAR\n * PROGRAMMER: YUE KA LONG, VUETIFY TEMPLATE OWNER\n * VERSION: 1.0 (16 MAY 2020)\n *\n * PURPOSE: THIS IS THE TOOLBAR OF THE APPLICATION. \n *          \n *\n */\n<!-- This is the component of the ToolBar -->\n<template>\n  <nav>\n    <v-app-bar app flat>\n      <v-container mx-auto py-0>\n        <v-layout>\n          <v-img\n            :src=\"require('@/assets/logo.png')\"\n            class=\"mr-5\"\n            contain\n            height=\"48\"\n            width=\"48\"\n            max-width=\"48\"\n            @click=\"backHome()\"\n          />\n          <template v-for=\"(link, i) in links\">\n            <!-- create button for each link -->\n            <v-btn\n              v-if=\"$store.state.loggedIn\"\n              :key=\"i\"\n              :to=\"link.to\"\n              class=\"ml-0 hidden-sm-and-down\"\n              depressed\n              large\n            >{{ link.text }}</v-btn>\n          </template>\n          <v-spacer />\n          <v-btn\n            v-if=\"!$store.state.loggedIn\"\n            :to=\"'sign_up'\"\n            class=\"ml-0 hidden-sm-and-down\"\n            depressed\n            large\n          >Sign Up</v-btn>\n          <v-btn\n            v-if=\"!$store.state.loggedIn\"\n            :to=\"'login'\"\n            class=\"ml-0 hidden-sm-and-down\"\n            depressed\n            large\n          >Login</v-btn>\n\n          <v-menu class=\"ml-0 hidden-sm-and-down\" v-if=\"$store.state.loggedIn\" offset-y>\n            <template v-slot:activator=\"{ on }\">\n              <v-btn class=\"ml-0 hidden-sm-and-down\" fab depressed color=\"primary\" v-on=\"on\">\n                <v-icon large dark>mdi-account-circle</v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item>\n                <v-btn class=\"ml-0 hidden-sm-and-down\" depressed block :to=\"'profile'\">Profile</v-btn>\n              </v-list-item>\n              <v-list-item>\n                <v-btn class=\"ml-0 hidden-sm-and-down\" depressed block @click=\"logout\">Logout</v-btn>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-layout>\n      </v-container>\n\n      <!-- for mobile version -->\n      <v-app-bar-nav-icon @click=\"drawer = true\" class=\"hidden-md-and-up\"></v-app-bar-nav-icon>\n    </v-app-bar>\n    <v-navigation-drawer\n      v-resize=\"fetchWindowSize\"\n      :height=\"windowHeight\"\n      v-model=\"drawer\"\n      temporary\n      fixed\n      app\n    >\n      <v-list>\n        <v-list-item class=\"justify-center\">\n          <v-btn fab depressed color=\"primary\" :to=\"'profile'\">\n            <v-icon large dark>mdi-account-circle</v-icon>\n          </v-btn>\n        </v-list-item>\n        <v-list-item v-for=\"(link, i) in links\" :key=\"i\">\n          <!-- create button for each link -->\n          <v-btn v-if=\"$store.state.loggedIn\" :key=\"i\" :to=\"link.to\" depressed block>{{ link.text }}</v-btn>\n        </v-list-item>\n      </v-list>\n      <template v-slot:append>\n        <v-list-item>\n          <v-btn v-if=\"!$store.state.loggedIn\" :to=\"'sign_up'\" depressed block>Sign Up</v-btn>\n        </v-list-item>\n        <v-list-item>\n          <v-btn v-if=\"!$store.state.loggedIn\" :to=\"'login'\" depressed block>Login</v-btn>\n        </v-list-item>\n        <v-list-item>\n          <v-btn v-if=\"$store.state.loggedIn\" depressed block @click=\"logout\">Logout</v-btn>\n        </v-list-item>\n        <v-list-item></v-list-item>\n        <v-spacer />\n      </template>\n    </v-navigation-drawer>\n  </nav>\n</template>\n\n<script>\n// Utilities\nimport { mapGetters, mapMutations } from \"vuex\";\n\nexport default {\n  data: () => ({\n    links: [\n      { text: \"Restaurant\", to: \"restaurant\" }, // set Restaurant route\n      { text: \"Matching\", to: \"matching\" }, // set Matching route\n      { text: \"Chatroom\", to: \"chatroom\" } // set Chatroom route\n    ],\n    login: { text: \"Login\", to: \"login\" }, // set Login route\n    sign_up: { text: \"Sign Up\", to: \"sign_up\" }, // set Sign Up route\n    drawer: false,\n    windowHeight: 375\n  }),\n  mounted() {\n    this.fetchWindowSize();\n  },\n  methods: {\n    fetchWindowSize() {\n      this.windowHeight = window.innerHeight;\n    },\n    backHome() {\n      this.$router.push(\"/\");\n    },\n    // handle logout request\n    async logout() {\n      // if in chatroom page and socket still connected\n      if (this.$socket != null) {\n        // emit to back-end to disconnect socket\n        await this.$socket.emit(\"leavePage\", this.$store.state.user);\n      }\n      // use the logout function in mutation to remove all the state\n      await this.$store.dispatch(\"logout\").then(res => {\n        this.$router.push(\"/\");\n      });\n    }\n  }\n};\n</script>\n"]}]}