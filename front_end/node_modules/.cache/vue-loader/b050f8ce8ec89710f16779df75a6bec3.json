{"remainingRequest":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/Login.vue","mtime":1589641334000},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/babel-loader/lib/index.js","mtime":1573785088708},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js","mtime":1584457032094},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js","mtime":1573785100670}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"login\",\n  components: {},\n  data: () => ({\n    valid: false,\n\n    //username rules\n    username: \"\",\n    nameRules: [\n      v => !!v || \"Username is required\",\n      v => (v && v.length <= 10) || \"Username must be less than 10 characters\"\n    ],\n\n    //password rules\n    password: \"\",\n    passwordRules: [\n      v =>\n        (v || \"\").match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n        \"Password must contain an upper case letter, a numeric character, and a special character\",\n      v => (v && v.length >= 6) || \"Password must be More than 6 characters\",\n      v => !!v || \"Password is required\"\n    ],\n    errorMsg: \"\"\n  }),\n\n  //methods to provide phone views\n  methods: {\n    size() {\n      switch (this.$vuetify.breakpoint.name) {\n        case \"xs\":\n          return \"90%\";\n        case \"sm\":\n          return \"90%\";\n        case \"md\":\n          return \"70%\";\n        case \"lg\":\n          return \"70%\";\n        case \"xl\":\n          return \"70%\";\n      }\n    },\n    login() {\n      this.$store\n        //check whether username matches the corresponding password\n        .dispatch(\"login\", {\n          username: this.username,\n          password: this.password\n        })\n        .then(res => {\n          this.$router.push(\"/matching\");\n        })\n        .catch(error => {\n          //catch error in case username didn't match corresponding password\n          //or username doesn't exist\n          this.errorMsg = \"Invalid Credentials\";\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["/*\n * MODULE NAME: LOGIN\n * PROGRAMMER: YUE KA LONG, TU CHEN HSIEN\n * VERSION: 1.0 (16 MAY 2020)\n *\n * PURPOSE: THIS IS THE LOGIN PAGE WHICH HANDLE THE LOGIN\n *\n */\n <!--this file construct login for users to login-->\n<template>\n  <div id=\"login\">\n    <v-container fluid>\n      <v-layout align-center justify-center>\n        <v-card :width=\"size()\">\n          <v-card-title class=\"grey--text display-1 font-weight-light\">Login</v-card-title>\n          <v-card-text>\n            <v-container>\n              <h2 class=\"headline font-weight-light\">HelloÔºÅ</h2>\n              <br />\n              <v-flex xs12 md6>\n                <div class=\"red--text subtitle-1\">{{ errorMsg }}</div>\n                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                  <!--username textfield-->\n                  <v-text-field\n                    v-model=\"username\"\n                    :rules=\"nameRules\"\n                    prepend-inner-icon=\"fas fa-user\"\n                    label=\"Username\"\n                    required\n                    outlined\n                    shaped\n                    @keyup.enter=\"login\"\n                  ></v-text-field>\n                  <!--password textfield-->\n                  <v-text-field\n                    v-model=\"password\"\n                    :rules=\"passwordRules\"\n                    prepend-inner-icon=\"fas fa-key\"\n                    label=\"Password\"\n                    type=\"password\"\n                    outlined\n                    shaped\n                    @keyup.enter=\"login\"\n                  ></v-text-field>\n                </v-form>\n              </v-flex>\n            </v-container>\n            <v-card-actions>\n              <!--Login button-->\n              <v-btn color=\"secondary\" @click=\"login\">Login</v-btn>\n              <v-spacer></v-spacer>\n              <!--Return to home button-->\n              <v-btn :to=\"'/'\">Go Back</v-btn>\n            </v-card-actions>\n          </v-card-text>\n        </v-card>\n      </v-layout>\n    </v-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"login\",\n  components: {},\n  data: () => ({\n    valid: false,\n\n    //username rules\n    username: \"\",\n    nameRules: [\n      v => !!v || \"Username is required\",\n      v => (v && v.length <= 10) || \"Username must be less than 10 characters\"\n    ],\n\n    //password rules\n    password: \"\",\n    passwordRules: [\n      v =>\n        (v || \"\").match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n        \"Password must contain an upper case letter, a numeric character, and a special character\",\n      v => (v && v.length >= 6) || \"Password must be More than 6 characters\",\n      v => !!v || \"Password is required\"\n    ],\n    errorMsg: \"\"\n  }),\n\n  //methods to provide phone views\n  methods: {\n    size() {\n      switch (this.$vuetify.breakpoint.name) {\n        case \"xs\":\n          return \"90%\";\n        case \"sm\":\n          return \"90%\";\n        case \"md\":\n          return \"70%\";\n        case \"lg\":\n          return \"70%\";\n        case \"xl\":\n          return \"70%\";\n      }\n    },\n    login() {\n      this.$store\n        //check whether username matches the corresponding password\n        .dispatch(\"login\", {\n          username: this.username,\n          password: this.password\n        })\n        .then(res => {\n          this.$router.push(\"/matching\");\n        })\n        .catch(error => {\n          //catch error in case username didn't match corresponding password\n          //or username doesn't exist\n          this.errorMsg = \"Invalid Credentials\";\n        });\n    }\n  }\n};\n</script>\n"]}]}