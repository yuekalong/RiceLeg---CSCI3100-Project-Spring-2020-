{"remainingRequest":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/babel-loader/lib/index.js!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/components/matching/BrowseRequest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/components/matching/BrowseRequest.vue","mtime":1589641518000},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/babel-loader/lib/index.js","mtime":1573785088708},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js","mtime":1584457032094},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js","mtime":1573785100670}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { service } from \"@/plugins/request_service\";\nimport moment from \"moment-timezone\";\nexport default {\n  data: function data() {\n    return {\n      multiLine: true,\n      snackbar: false,\n      send: false,\n      listOfRequest: [],\n      selectedRequestID: null\n    };\n  },\n  mounted: function mounted() {\n    this.getListOfRequest();\n  },\n  methods: {\n    getListOfRequest: function getListOfRequest() {\n      var _this = this;\n\n      service.get(\"/matching/requestlist\").then(function (res) {\n        if (res.data.success) {\n          var temp = res.data.data;\n          _this.listOfRequest = temp.map(function (s) {\n            return s = {\n              // fetching request information from database\n              requestID: s.requestID,\n              createUser: s.createUser,\n              requestName: s.requestName,\n              location: s.location,\n              date: moment(s.date).tz(\"Asia/Hong_Kong\").format(\"YYYY-MM-DD\"),\n              startingTime: s.startingTime,\n              endingTime: s.endingTime,\n              major: s.major,\n              year: s.year,\n              selfIntro: s.selfIntro,\n              stateVegetarian: s.stateVegetarian\n            };\n          });\n        }\n      });\n    },\n    openDialog: function openDialog(object) {\n      // fetching selected request ID\n      this.send = true;\n      this.selectedRequestID = object.requestID;\n    },\n    insertInvite: function insertInvite() {\n      var _this2 = this;\n\n      // insert invitation row to database\n      service.post(\"/matching/sendInvitation\", {\n        requestID: this.selectedRequestID,\n        inviteUser: this.$store.state.user.username\n      }).then(function (res) {\n        if (res.data.success) {\n          _this2.send = false;\n          _this2.snackbar = true;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["BrowseRequest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA,SAAA,OAAA,QAAA,2BAAA;AACA,OAAA,MAAA,MAAA,iBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA,KAHA;AAIA,MAAA,aAAA,EAAA,EAJA;AAKA,MAAA,iBAAA,EAAA;AALA,KAAA;AAAA,GADA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,gBAAA;AACA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,cAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,KAAA,CAAA,aAAA,GAAA,IAAA,CAAA,GAAA,CACA,UAAA,CAAA;AAAA,mBACA,CAAA,GAAA;AAAA;AACA,cAAA,SAAA,EAAA,CAAA,CAAA,SADA;AAEA,cAAA,UAAA,EAAA,CAAA,CAAA,UAFA;AAGA,cAAA,WAAA,EAAA,CAAA,CAAA,WAHA;AAIA,cAAA,QAAA,EAAA,CAAA,CAAA,QAJA;AAKA,cAAA,IAAA,EAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CACA,EADA,CACA,gBADA,EAEA,MAFA,CAEA,YAFA,CALA;AAQA,cAAA,YAAA,EAAA,CAAA,CAAA,YARA;AASA,cAAA,UAAA,EAAA,CAAA,CAAA,UATA;AAUA,cAAA,KAAA,EAAA,CAAA,CAAA,KAVA;AAWA,cAAA,IAAA,EAAA,CAAA,CAAA,IAXA;AAYA,cAAA,SAAA,EAAA,CAAA,CAAA,SAZA;AAaA,cAAA,eAAA,EAAA,CAAA,CAAA;AAbA,aADA;AAAA,WADA,CAAA;AAkBA;AACA,OAtBA;AAuBA,KAzBA;AA0BA,IAAA,UA1BA,sBA0BA,MA1BA,EA0BA;AAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,iBAAA,GAAA,MAAA,CAAA,SAAA;AACA,KA7BA;AA8BA,IAAA,YA9BA,0BA8BA;AAAA;;AAAA;AACA,MAAA,OAAA,CACA,IADA,CACA,0BADA,EACA;AACA,QAAA,SAAA,EAAA,KAAA,iBADA;AAEA,QAAA,UAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAFA,OADA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA;AACA,OAVA;AAWA;AA1CA;AAXA,CAAA","sourcesContent":["/*\n<<<<<<< HEAD\n* COMPONENT NAME: BROWSE_REQUEST\n* PROGRAMMER: LAM HIU LUI\n* VERSION: 1.0 (16 MAY 2020)\n*\n* PURPOSE: BROWSE REQUEST TAB ON THE MATCHING PAGE\n*          PROVIDE BROWSING REQUESTS AND SENDING INVITATION FUNCTIONS.\n=======\n* COMPONENT NAME: MAKE A REQUEST\n* PROGRAMMER: Wong Kin Chi\n* VERSION: 1.0 (16 MAY 2020)\n*\n* PURPOSE: MAKE A REQUEST FORM FOR MAKING REQUEST \n* AND UPLOAD THE REQUEST DATA TO DATABASE\n>>>>>>> charlie\n*/\n<template>\n  <v-row no-gutters>\n    <v-col\n      v-for=\"object in listOfRequest\"\n      :key=\"object.requestID\"\n      cols=\"12\"\n      sm=\"4\"\n    >\n      <v-card class=\"ma-3\" centered min-height=\"500px\">\n        <!-- Image for vegetarian request -->\n        <v-img\n          v-if=\"object.stateVegetarian == 1\"    \n          class=\"white--text align-end dark\"\n          height=\"200px\"\n          src=\"@/assets/matching_photo/cuhk_veggie_can.jpg\"\n          gradient=\"to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.4)\"\n        >\n          <v-card-title>{{ object.requestName }}</v-card-title>\n        </v-img>\n        <!-- Image for non-vegetarian request -->\n        <v-img\n          v-else\n          class=\"white--text align-end dark\"\n          height=\"200px\"\n          src=\"@/assets/matching_photo/meal_1.jpg\"\n          gradient=\"to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.4)\"\n        >\n          <v-card-title>{{ object.requestName }}</v-card-title>\n        </v-img>\n        <!-- Structure of a request card -->\n        <v-card-text pa-3>\n          <div class=\"subtitle-1 py-0 black--text\">\n            Request number: {{ object.requestID }}\n          </div>\n          <div class=\"subtitle-1 py-0\">Location: {{ object.location }}</div>\n          <div class=\"subtitle-1 py-0\">\n            Date: {{ object.date.slice(0, 10) }}\n          </div>\n          <div class=\"subtitle-1 py-0\">\n            Time: {{ object.startingTime.slice(0, 5) }} -\n            {{ object.endingTime.slice(0, 5) }}\n          </div>\n          <div class=\"subtitle-1 py-0\">Major: {{ object.major }}</div>\n          <div class=\"subtitle-1 py-0\">Year: {{ object.year }}</div>\n          <div class=\"subtitle-1 py-0\" style=\"word-break: break-all;\">\n            {{ object.selfIntro }}\n          </div>\n        </v-card-text>\n        <!-- Request creator cannot send invitation to himself/herself -->\n        <v-card-actions>\n          <v-btn\n            v-if=\"object.createUser != $store.state.user.username\"\n            style=\"position: absolute; bottom:   0;\"\n            color=\"primary\"\n            text\n            @click=\"openDialog(object)\"\n            >Send Invitation</v-btn\n          >\n          <!-- Pop-up to reconfirm send invitation -->\n          <v-dialog v-model=\"send\" persistent max-width=\"500\">\n            <v-card>\n              <v-card-title class=\"headline\"\n                >Are you sure to send an invitation?</v-card-title\n              >\n              <v-card-text\n                >You can't delete your invitation after the invitation has been\n                accepted.</v-card-text\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"secondary\" text @click=\"send = false\"\n                  >Go back</v-btn\n                >\n                <v-btn color=\"primary\" text @click=\"insertInvite()\">Yes</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-card-actions>\n        <!-- Notification for sent invitations -->\n        <v-snackbar\n          color=\"secondary\"\n          v-model=\"snackbar\"\n          :multi-line=\"multiLine\"\n          :timeout=\"2500\"\n          top\n        >\n          Your invitation has been sent!\n          <v-btn text color=\"white\" @click=\"snackbar = false\"\n            >Close</v-btn\n          >\n        </v-snackbar>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n<script>\nimport { service } from \"@/plugins/request_service\";\nimport moment from \"moment-timezone\";\nexport default {\n  data: () => ({\n    multiLine: true,\n    snackbar: false,\n    send: false,\n    listOfRequest: [],\n    selectedRequestID: null\n  }),\n  mounted() {\n    this.getListOfRequest();\n  },\n  methods: {\n    getListOfRequest() {\n      service.get(\"/matching/requestlist\").then(res => {\n        if (res.data.success) {\n          let temp = res.data.data;\n          this.listOfRequest = temp.map(\n            s =>\n              (s = {    // fetching request information from database\n                requestID: s.requestID,\n                createUser: s.createUser,\n                requestName: s.requestName,\n                location: s.location,\n                date: moment(s.date)\n                  .tz(\"Asia/Hong_Kong\")\n                  .format(\"YYYY-MM-DD\"),\n                startingTime: s.startingTime,\n                endingTime: s.endingTime,\n                major: s.major,\n                year: s.year,\n                selfIntro: s.selfIntro,\n                stateVegetarian: s.stateVegetarian\n              })\n          );\n        }\n      });\n    },\n    openDialog(object) {  // fetching selected request ID\n      this.send = true;\n      this.selectedRequestID = object.requestID;\n    },\n    insertInvite() {    // insert invitation row to database\n      service\n        .post(\"/matching/sendInvitation\", {\n          requestID: this.selectedRequestID,\n          inviteUser: this.$store.state.user.username\n        })\n        .then(res => {\n          if (res.data.success) {\n            this.send = false;\n            this.snackbar = true;\n          }\n        });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/matching"}]}