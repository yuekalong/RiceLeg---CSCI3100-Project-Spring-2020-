{"remainingRequest":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/components/restaurant/Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/components/restaurant/Comment.vue","mtime":1589641555000},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/babel-loader/lib/index.js","mtime":1573785088708},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js","mtime":1584457032094},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js","mtime":1573785100670}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { service } from \"@/plugins/request_service\";\n\nexport default {\n  props: [\"restaurantName\"],\n  data: () => ({\n    dialog: false,\n    feedback: [],\n    newRating: null,\n    newComment: \"\",\n    warning: \"\",\n    snackbar: false,\n    multiLine: true\n  }),\n  methods: {\n    openDialog() {\n      this.dialog = true;\n      service.get(`/restaurant/getComment/${this.restaurantName}`).then(res => {\n        if (res.data.success) {\n          this.feedback = res.data.data;\n        }\n      });\n    },\n    sendFeedback() {\n      if (this.newRating > 0 && this.newComment.length > 0) {\n        const obj = {\n          restaurantName: this.restaurantName,\n          opinion: this.newComment,\n          rating: this.newRating\n        };\n        service\n          .post(`/restaurant/commentAndRating`, {\n            obj: JSON.stringify(obj)\n          })\n          .then(res => {\n            if (res.data.success) {\n              this.dialog = false;\n              this.snackbar = true;\n              this.newComment = \"\";\n              this.newRating = null;\n            }\n          });\n      } else {\n        this.warning = \"Rating or Comment cannot be null!\";\n      }\n    }\n  },\n  watch: {\n    newRating() {\n      this.warning = \"\";\n    },\n    newComment() {\n      this.warning = \"\";\n    }\n  }\n};\n",{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Comment.vue","sourceRoot":"src/components/restaurant","sourcesContent":["<template>\n  <div>\n    <v-btn outlined color=\"secondary\" @click=\"openDialog\">View More</v-btn>\n    <v-dialog v-model=\"dialog\" max-width=\"80%\">\n      <v-card>\n        <v-card-title class=\"headline secondary--text justify-center\">Comment and Rating</v-card-title>\n        <v-card-text>\n          <v-row>\n            <v-col v-for=\"item in feedback\" :key=\"item.id\" cols=\"12\" sm=\"3.5\">\n              <v-card\n                outlined\n                class=\"ma-3\"\n                centered\n                min-height=\"90%\"\n                style=\"word-break: break-all;\"\n              >\n                <v-rating :value=\"parseInt(item.rating)\" readonly></v-rating>\n                <v-card-text\n                  class=\"secondary--text headline\"\n                  style=\"word-break: break-all;\"\n                >{{ item.opinion }}</v-card-text>\n              </v-card>\n            </v-col>\n          </v-row>\n          <v-card\n            outlined\n            class=\"mx-auto\"\n            centered\n            min-height=\"90%\"\n            style=\"text-align:center; border: 1px solid #FFB6D0;\"\n            max-width=\"600px\"\n          >\n            <v-card-title\n              class=\"justify-center secondary--text headline\"\n            >Leave your comment and rating!</v-card-title>\n            <v-card-text>\n              <div class=\"red--text subtitle-1\">{{ this.warning }}</div>\n              <v-rating v-model=\"newRating\"></v-rating>\n              <v-textarea\n                v-model=\"newComment\"\n                counter=\"250\"\n                maxlength=\"250\"\n                outlined\n                label=\"Comment\"\n              ></v-textarea>\n            </v-card-text>\n            <v-card-actions>\n              <v-spacer />\n              <v-btn outlined color=\"blue\" @click=\"sendFeedback\">Submit</v-btn>\n              <v-spacer />\n            </v-card-actions>\n          </v-card>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-snackbar color=\"secondary\" v-model=\"snackbar\" :multi-line=\"multiLine\" :timeout=\"2500\" top>\n      Your comment has been sent!\n      <v-btn text color=\"white\" @click=\"snackbar = false\">Close</v-btn>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport { service } from \"@/plugins/request_service\";\n\nexport default {\n  props: [\"restaurantName\"],\n  data: () => ({\n    dialog: false,\n    feedback: [],\n    newRating: null,\n    newComment: \"\",\n    warning: \"\",\n    snackbar: false,\n    multiLine: true\n  }),\n  methods: {\n    openDialog() {\n      this.dialog = true;\n      service.get(`/restaurant/getComment/${this.restaurantName}`).then(res => {\n        if (res.data.success) {\n          this.feedback = res.data.data;\n        }\n      });\n    },\n    sendFeedback() {\n      if (this.newRating > 0 && this.newComment.length > 0) {\n        const obj = {\n          restaurantName: this.restaurantName,\n          opinion: this.newComment,\n          rating: this.newRating\n        };\n        service\n          .post(`/restaurant/commentAndRating`, {\n            obj: JSON.stringify(obj)\n          })\n          .then(res => {\n            if (res.data.success) {\n              this.dialog = false;\n              this.snackbar = true;\n              this.newComment = \"\";\n              this.newRating = null;\n            }\n          });\n      } else {\n        this.warning = \"Rating or Comment cannot be null!\";\n      }\n    }\n  },\n  watch: {\n    newRating() {\n      this.warning = \"\";\n    },\n    newComment() {\n      this.warning = \"\";\n    }\n  }\n};\n</script>\n\n<style></style>\n"]}]}