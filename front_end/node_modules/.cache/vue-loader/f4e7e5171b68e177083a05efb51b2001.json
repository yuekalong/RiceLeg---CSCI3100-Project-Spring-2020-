{"remainingRequest":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/src/views/SignUp.vue","mtime":1589641580000},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/babel-loader/lib/index.js","mtime":1573785088708},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vuetify-loader/lib/loader.js","mtime":1584457032094},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1583842195418},{"path":"/Users/yuekalong/Desktop/Year 3 Sem 2/CSCI3100/Project/RiceLeg---CSCI3100-Project-Spring-2020-/front_end/node_modules/vue-loader/lib/index.js","mtime":1573785100670}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { service } from \"@/plugins/request_service\";\nimport router from \"../../node_modules/vue-router\";\nexport default {\n  data: () => ({\n    data: \"\",\n    valid: false,\n    lazy: false,\n    name: \"\",\n    chip: true,\n\n    //selection set for college\n    labels: [\n      { name: \"Chung Chi College\" },\n      { name: \"New Asia College\" },\n      { name: \"United College\" },\n      { name: \"Shaw College\" },\n      { name: \"Lee Woo Sing College\" },\n      { name: \"Wu Yee Sun College\" },\n      { name: \"S.H. Ho College\" },\n      { name: \"CW Chu College\" },\n      { name: \"Morningside College\" }\n    ],\n\n    //rules for username\n    nameRules: [\n      v => !!v || \"Name is required\",\n      v => (v && v.length <= 15) || \"Name must be less than 15 characters\"\n    ],\n    email: \"\",\n\n    //rules for email\n    emailRules: [\n      v => !!v || \"E-mail is required\",\n      v => /.+@link.cuhk.edu.hk+/.test(v) || \"E-mail must be valid\"\n    ],\n    major: \"\",\n\n    //rules for major\n    majorRules: [v => !!v || \"Major is required\"],\n\n    displayName: \"\",\n\n    //rules for display name\n    displayNameRules: [v => !!v || \"Ur display name is required\"],\n\n    password: \"\",\n\n    //rules for password\n    passwordRules: [\n      v =>\n        (v || \"\").match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n        \"Password must contain an upper case letter, a numeric character, and a special character\",\n      v => (v && v.length >= 6) || \"Password must be at least 6 characters\",\n      v => !!v || \"Password is required\"\n    ],\n\n    selfIntro: \"\",\n\n    //rules for self introduction\n    selfIntroRules: [v => !!v || \"Self-Introduction is required\"],\n\n    year: \"\",\n\n    //rules for year\n    yearRules: [\n      v => (v || \"\").match(/^[0-9]*[1-9][0-9]*$/) || \"year is required\"\n    ],\n\n    select: null,\n    college: [\n      \"Chung Chi College\",\n      \"New Asia College\",\n      \"United College\",\n      \"Shaw College\",\n      \"Lee Woo Sing College\",\n      \"Wu Yee Sun College\",\n      \"S.H. Ho College\",\n      \"CW Chu College\",\n      \"Morningside College\"\n    ],\n    collegeSelected: \"\",\n    checkbox: false,\n    finished: false,\n    validateSubmit: false,\n    finishedMsg:\n      \"You have finished SignUp Procedure,You can press Return to Home to leave!\",\n    errMsg: \"\"\n  }),\n  mounted() {},\n  methods: {\n    inputCollege(input) {\n      this.collegeSelected = input;\n    },\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    validateInfo() {\n      // not use\n      if (\n        this.name == \"\" ||\n        this.password == \"\" ||\n        this.displayName == \"\" ||\n        this.major == \"\" ||\n        this.year == \"\" ||\n        this.college == \"\" ||\n        this.selfIntro == \"\"\n      ) {\n        alert(\"you have not complete on writing your information\");\n        return 0;\n      }\n    },\n\n    //method to submit user information to the database\n    submitData() {\n      service\n        .post(\"/auth/signUp\", {\n          username: this.name,\n          password: this.password,\n          email: this.email,\n          displayName: this.displayName,\n          major: this.major,\n          year: this.year,\n          college: this.collegeSelected,\n          selfIntro: this.selfIntro\n        })\n        .then(res => {\n          //action for successful connection\n          if (res.data.success) {\n            console.log(\"Update to database success!\");\n            this.finished = true;\n            this.$router.push(\"/\");\n          } else {\n            //action for unsuccessful connection\n            console.log(\"Update to database failed!\");\n          }\n        })\n        .catch(err => {\n          this.errMsg = \"Username already taken!\";\n        });\n    }\n  },\n  watch: {\n    name() {\n      this.errMsg = \"\";\n    }\n  }\n};\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"SignUp.vue","sourceRoot":"src/views","sourcesContent":["/*\n * MODULE NAME: LOGIN\n * PROGRAMMER: TU CHEN HSIEN\n * VERSION: 1.0 (16 MAY 2020)\n *\n * PURPOSE: THIS IS THE SIGNUP PAGE WHICH HANDLE THE LOGIN\n *\n */\n <!--this file construct sign up for users to sign up-->\n<template>\n  <v-container fluid>\n    <v-layout align-center justify-center>\n      <v-flex xs10>\n        <v-card>\n          <!-- Cover photo -->\n          <v-img\n            class=\"white--text\"\n            height=\"200px\"\n            :src=\"require('@/assets/sign_up_cover_photo/sign_up_cover.jpg')\"\n          >\n            <v-container fill-height fluid>\n              <v-layout fill-height>\n                <v-flex xs12 align-end flexbox></v-flex>\n              </v-layout>\n            </v-container>\n          </v-img>\n\n          <h1 style=\"margin-left: 0.5em\" class=\"font-weight-light\">Sign Up</h1>\n          <v-card-text>\n            <v-layout row wrap>\n              <v-flex xs12 md6>\n                <v-form ref=\"form\" v-model=\"valid\" :lazy-validation=\"lazy\">\n                  <div class=\"red--text\">{{ errMsg }}</div>\n                  <!-- name text field -->\n                  <v-text-field\n                    v-model=\"name\"\n                    :counter=\"10\"\n                    :rules=\"nameRules\"\n                    label=\"Name\"\n                    required\n                  ></v-text-field>\n                  <!-- password text field -->\n                  <v-text-field\n                    v-model=\"password\"\n                    :rules=\"passwordRules\"\n                    label=\"Password\"\n                    type=\"password\"\n                    required\n                  ></v-text-field>\n                  <!-- email text field -->\n                  <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"E-mail\" required></v-text-field>\n\n                  <!-- displayName text field -->\n                  <v-text-field\n                    v-model=\"displayName\"\n                    :rules=\"displayNameRules\"\n                    label=\"Display Name\"\n                    required\n                  ></v-text-field>\n\n                  <!-- major text field -->\n                  <v-text-field v-model=\"major\" :rules=\"majorRules\" label=\"Major\" required></v-text-field>\n\n                  <!-- college selection field -->\n                  <v-select\n                    :items=\"labels\"\n                    :value=\"collegeSelected\"\n                    :input-value=\"collegeSelected\"\n                    :v-model=\"collegeSelected\"\n                    item-text=\"name\"\n                    item-value=\"name\"\n                    :rules=\"[v => !!v || 'College is required']\"\n                    label=\"College\"\n                    required\n                    autocomplete\n                    return-object\n                  >\n                    <template slot=\"selection\" slot-scope=\"data\">\n                      <v-chip\n                        :input-value=\"data.selected\"\n                        close\n                        class=\"chip--select-multi\"\n                        @input=\"data.parent.selectItem(data.item)\"\n                      >\n                        {{ data.item.name }}\n                        {{ inputCollege(data.item.name) }}\n                      </v-chip>\n                    </template>\n                  </v-select>\n\n                  <!-- year text field -->\n                  <v-text-field v-model=\"year\" :rules=\"yearRules\" label=\"Year\" required></v-text-field>\n\n                  <!-- self-introduction text field -->\n                  <v-text-field\n                    v-model=\"selfIntro\"\n                    :rules=\"selfIntroRules\"\n                    label=\"Self-Introduction\"\n                    required\n                  ></v-text-field>\n\n                  <!-- checkbox -->\n                  <v-checkbox\n                    v-model=\"checkbox\"\n                    :rules=\"[v => !!v || 'You must agree to continue!']\"\n                    label=\"Confirm all your information is correct\"\n                    required\n                  ></v-checkbox>\n                </v-form>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn text :to=\"'/'\">Return To Home</v-btn>\n\n            <v-btn :disabled=\"!valid\" color=\"success\" class=\"mr-4\" @click=\"submitData\">Submit</v-btn>\n\n            <v-snackbar v-model=\"finished\">\n              {{ finishedMsg }}\n              <v-btn color=\"pink\" text @click=\"finished = false\">Close</v-btn>\n            </v-snackbar>\n          </v-card-actions>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { service } from \"@/plugins/request_service\";\nimport router from \"../../node_modules/vue-router\";\nexport default {\n  data: () => ({\n    data: \"\",\n    valid: false,\n    lazy: false,\n    name: \"\",\n    chip: true,\n\n    //selection set for college\n    labels: [\n      { name: \"Chung Chi College\" },\n      { name: \"New Asia College\" },\n      { name: \"United College\" },\n      { name: \"Shaw College\" },\n      { name: \"Lee Woo Sing College\" },\n      { name: \"Wu Yee Sun College\" },\n      { name: \"S.H. Ho College\" },\n      { name: \"CW Chu College\" },\n      { name: \"Morningside College\" }\n    ],\n\n    //rules for username\n    nameRules: [\n      v => !!v || \"Name is required\",\n      v => (v && v.length <= 15) || \"Name must be less than 15 characters\"\n    ],\n    email: \"\",\n\n    //rules for email\n    emailRules: [\n      v => !!v || \"E-mail is required\",\n      v => /.+@link.cuhk.edu.hk+/.test(v) || \"E-mail must be valid\"\n    ],\n    major: \"\",\n\n    //rules for major\n    majorRules: [v => !!v || \"Major is required\"],\n\n    displayName: \"\",\n\n    //rules for display name\n    displayNameRules: [v => !!v || \"Ur display name is required\"],\n\n    password: \"\",\n\n    //rules for password\n    passwordRules: [\n      v =>\n        (v || \"\").match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n        \"Password must contain an upper case letter, a numeric character, and a special character\",\n      v => (v && v.length >= 6) || \"Password must be at least 6 characters\",\n      v => !!v || \"Password is required\"\n    ],\n\n    selfIntro: \"\",\n\n    //rules for self introduction\n    selfIntroRules: [v => !!v || \"Self-Introduction is required\"],\n\n    year: \"\",\n\n    //rules for year\n    yearRules: [\n      v => (v || \"\").match(/^[0-9]*[1-9][0-9]*$/) || \"year is required\"\n    ],\n\n    select: null,\n    college: [\n      \"Chung Chi College\",\n      \"New Asia College\",\n      \"United College\",\n      \"Shaw College\",\n      \"Lee Woo Sing College\",\n      \"Wu Yee Sun College\",\n      \"S.H. Ho College\",\n      \"CW Chu College\",\n      \"Morningside College\"\n    ],\n    collegeSelected: \"\",\n    checkbox: false,\n    finished: false,\n    validateSubmit: false,\n    finishedMsg:\n      \"You have finished SignUp Procedure,You can press Return to Home to leave!\",\n    errMsg: \"\"\n  }),\n  mounted() {},\n  methods: {\n    inputCollege(input) {\n      this.collegeSelected = input;\n    },\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    validateInfo() {\n      // not use\n      if (\n        this.name == \"\" ||\n        this.password == \"\" ||\n        this.displayName == \"\" ||\n        this.major == \"\" ||\n        this.year == \"\" ||\n        this.college == \"\" ||\n        this.selfIntro == \"\"\n      ) {\n        alert(\"you have not complete on writing your information\");\n        return 0;\n      }\n    },\n\n    //method to submit user information to the database\n    submitData() {\n      service\n        .post(\"/auth/signUp\", {\n          username: this.name,\n          password: this.password,\n          email: this.email,\n          displayName: this.displayName,\n          major: this.major,\n          year: this.year,\n          college: this.collegeSelected,\n          selfIntro: this.selfIntro\n        })\n        .then(res => {\n          //action for successful connection\n          if (res.data.success) {\n            console.log(\"Update to database success!\");\n            this.finished = true;\n            this.$router.push(\"/\");\n          } else {\n            //action for unsuccessful connection\n            console.log(\"Update to database failed!\");\n          }\n        })\n        .catch(err => {\n          this.errMsg = \"Username already taken!\";\n        });\n    }\n  },\n  watch: {\n    name() {\n      this.errMsg = \"\";\n    }\n  }\n};\n</script>\n"]}]}